// <auto-generated />
using Discussions.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Discussions.Migrations
{
    [DbContext(typeof(DiscussionContext))]
    [Migration("20181206061030_UpdateCommentRawComment")]
    partial class UpdateCommentRawComment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Discussions.Models.Comment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("Topicid");

                    b.Property<Guid?>("authorid");

                    b.Property<string>("message");

                    b.Property<string>("rawComment");

                    b.HasKey("id");

                    b.HasIndex("Topicid");

                    b.HasIndex("authorid");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Discussions.Models.Topic", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("title");

                    b.HasKey("id");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("Discussions.Models.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("imageUrl");

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Discussions.Models.Comment", b =>
                {
                    b.HasOne("Discussions.Models.Topic")
                        .WithMany("comments")
                        .HasForeignKey("Topicid");

                    b.HasOne("Discussions.Models.User", "author")
                        .WithMany()
                        .HasForeignKey("authorid");
                });
#pragma warning restore 612, 618
        }
    }
}
